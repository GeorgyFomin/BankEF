<Window x:Name="mWindow" x:Class="BankEF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:BankEF"
        xmlns:viewmodels="clr-namespace:BankEF.ViewModels" 
        d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="437.021" Width="800" WindowStyle="None" ResizeMode="NoResize" >
    <Window.Resources>
        <!--<Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>-->
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>-->
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                                <Setter Property="BorderBrush" TargetName="border" Value="Cyan"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="3"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                -->
                                <Setter Property="Background" TargetName="border" Value="Red" />
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="3"/>-->
                                <!--{StaticResource Button.MouseOver.Border}-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                                <Setter Property="BorderBrush" TargetName="border" Value="Green"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="10"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!--<Window.DataContext>
        <viewmodels:MainViewModel/>
    </Window.DataContext>-->
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" FlowDirection="RightToLeft" Background="#FFf1f1f1" Height="20" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding DragCommand}" CommandParameter="{Binding ElementName=mWindow}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Button x:Name="CloseButton" Background="Transparent" BorderBrush="Transparent" Style="{StaticResource ButtonStyle1}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding CloseCommand}" CommandParameter="{Binding ElementName=mWindow}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="20" Icon="WindowClose" Foreground="#9a9a9a"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="Maximize" Background="Transparent" BorderBrush="Transparent">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding MaximizeCommand}" CommandParameter="{Binding ElementName=mWindow}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Content>
                    <StackPanel >
                        <fa:IconBlock x:Name="MaxIconBlock" Width="20" Icon="WindowMaximize" Foreground="#9a9a9a"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="Minimize" Background="Transparent" BorderBrush="Transparent" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding MinimizeCommand}" CommandParameter="{Binding ElementName=mWindow}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="20" Icon="WindowMinimize" Foreground="#9a9a9a"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Background="Transparent" BorderBrush="Transparent">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ResetBankCommand}" CommandParameter="{Binding ElementName=Clients}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                Random Bank
            </Button>
        </StackPanel>
        <StackPanel x:Name="menuSelector" DockPanel.Dock="Left">
            <StackPanel.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="#FF120F46" Offset="1"/>
                </LinearGradientBrush>
            </StackPanel.Background>
            <Button Width="70" Height="60" Background="#293a4c" Command="{Binding ListCommand}">
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="35" Height="35" Padding="0 8 0 0" Icon="Bars" Foreground="#8393a3" FontSize="18"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Width="70" Height="60" Background="#293a4c" Command="{Binding ClientsCommand}">
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="35" Height="35" Padding="0 2 0 0" Icon="PeopleArrows" Foreground="#8393a3" FontSize="22"/>
                        <TextBlock Foreground="#889798">Клиенты</TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Width="70" Height="60" Background="#293a4c" Command="{Binding DepositsCommand}">
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="35" Height="35" Padding="0 2 0 0" Icon="MoneyCheck" Foreground="#8393a3" FontSize="22"/>
                        <TextBlock Foreground="#889798">Счета</TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Width="70" Height="60" Background="#293a4c" Command="{Binding LoansCommand}" >
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="35" Height="35" Padding="0 2 0 0" Icon="MoneyBillAlt" Foreground="#8393a3" FontSize="25"/>
                        <TextBlock Foreground="#889798">Кредиты</TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Width="70" Height="60" Background="#293a4c">
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="35" Height="35" Padding="0 2 0 0" Icon="Comment" Foreground="#8393a3" FontSize="22"/>
                        <TextBlock Foreground="#889798" HorizontalAlignment="Center">Чат</TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Width="70" Height="60" Background="#293a4c">
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="35" Height="35" Padding="0 2 0 0" Icon="Cog" Foreground="#8393a3" FontSize="22"/>
                        <TextBlock Foreground="#889798">Настройки</TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Width="70" Height="60" Background="#293a4c">
                <Button.Content>
                    <StackPanel>
                        <fa:IconBlock Width="35" Height="35" Padding="0 2 0 0" Icon="Key" Foreground="#8393a3" FontSize="25"/>
                        <TextBlock Foreground="#889798" HorizontalAlignment="Center">Вход</TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
        </StackPanel>
        <Grid>
            <ContentControl Content="{Binding ViewModel}">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type viewmodels:BankNameViewModel}">
                        <local:BankNameControl/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:ClientViewModel}" >
                        <local:ClientControl/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:ListViewModel}" >
                        <local:ListControl/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:DepositViewModel}" >
                        <local:DepositControl/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:LoanViewModel}" >
                        <local:LoanControl/>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </Grid>
    </DockPanel>
</Window>
